==1923642== Memcheck, a memory error detector
==1923642== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1923642== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==1923642== Command: /home/j242h828/EECS_678/Project1/quash/quash
==1923642== 
==1923749== Syscall param openat(filename) points to unaddressable byte(s)
==1923749==    at 0x498E6EB: open (open64.c:41)
==1923749==    by 0x4906135: _IO_file_open (fileops.c:188)
==1923749==    by 0x4906491: _IO_file_fopen@@GLIBC_2.2.5 (fileops.c:280)
==1923749==    by 0x48F972D: __fopen_internal (iofopen.c:75)
==1923749==    by 0x48F972D: fopen@@GLIBC_2.2.5 (iofopen.c:86)
==1923749==    by 0x10D686: create_process (execute.c:420)
==1923749==    by 0x10D932: run_script (execute.c:479)
==1923749==    by 0x10A976: main (quash.c:121)
==1923749==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1923749== 
==1923749== Invalid read of size 4
==1923749==    at 0x49015A4: fileno (fileno.c:35)
==1923749==    by 0x10D696: create_process (execute.c:421)
==1923749==    by 0x10D932: run_script (execute.c:479)
==1923749==    by 0x10A976: main (quash.c:121)
==1923749==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1923749== 
==1923749== 
==1923749== Process terminating with default action of signal 11 (SIGSEGV)
==1923749==  Access not within mapped region at address 0x0
==1923749==    at 0x49015A4: fileno (fileno.c:35)
==1923749==    by 0x10D696: create_process (execute.c:421)
==1923749==    by 0x10D932: run_script (execute.c:479)
==1923749==    by 0x10A976: main (quash.c:121)
==1923749==  If you believe this happened as a result of a stack
==1923749==  overflow in your program's main thread (unlikely but
==1923749==  possible), you can try to increase the size of the
==1923749==  main thread stack using the --main-stacksize= flag.
==1923749==  The main thread stack size used in this run was 8388608.
==1923749== 
==1923749== HEAP SUMMARY:
==1923749==     in use at exit: 27,970 bytes in 9 blocks
==1923749==   total heap usage: 19 allocs, 10 frees, 30,362 bytes allocated
==1923749== 
==1923749== LEAK SUMMARY:
==1923749==    definitely lost: 0 bytes in 0 blocks
==1923749==    indirectly lost: 0 bytes in 0 blocks
==1923749==      possibly lost: 0 bytes in 0 blocks
==1923749==    still reachable: 27,970 bytes in 9 blocks
==1923749==         suppressed: 0 bytes in 0 blocks
==1923749== Reachable blocks (those to which a pointer was found) are not shown.
==1923749== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1923749== 
==1923749== For lists of detected and suppressed errors, rerun with: -s
==1923749== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
==1924479== Syscall param openat(filename) points to unaddressable byte(s)
==1924479==    at 0x498E6EB: open (open64.c:41)
==1924479==    by 0x4906135: _IO_file_open (fileops.c:188)
==1924479==    by 0x4906491: _IO_file_fopen@@GLIBC_2.2.5 (fileops.c:280)
==1924479==    by 0x48F972D: __fopen_internal (iofopen.c:75)
==1924479==    by 0x48F972D: fopen@@GLIBC_2.2.5 (iofopen.c:86)
==1924479==    by 0x10D686: create_process (execute.c:420)
==1924479==    by 0x10D932: run_script (execute.c:479)
==1924479==    by 0x10A976: main (quash.c:121)
==1924479==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1924479== 
==1924479== Invalid read of size 4
==1924479==    at 0x49015A4: fileno (fileno.c:35)
==1924479==    by 0x10D696: create_process (execute.c:421)
==1924479==    by 0x10D932: run_script (execute.c:479)
==1924479==    by 0x10A976: main (quash.c:121)
==1924479==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1924479== 
==1924479== 
==1924479== Process terminating with default action of signal 11 (SIGSEGV)
==1924479==  Access not within mapped region at address 0x0
==1924479==    at 0x49015A4: fileno (fileno.c:35)
==1924479==    by 0x10D696: create_process (execute.c:421)
==1924479==    by 0x10D932: run_script (execute.c:479)
==1924479==    by 0x10A976: main (quash.c:121)
==1924479==  If you believe this happened as a result of a stack
==1924479==  overflow in your program's main thread (unlikely but
==1924479==  possible), you can try to increase the size of the
==1924479==  main thread stack using the --main-stacksize= flag.
==1924479==  The main thread stack size used in this run was 8388608.
==1924479== 
==1924479== HEAP SUMMARY:
==1924479==     in use at exit: 25,922 bytes in 8 blocks
==1924479==   total heap usage: 26 allocs, 18 frees, 31,766 bytes allocated
==1924479== 
==1924479== LEAK SUMMARY:
==1924479==    definitely lost: 0 bytes in 0 blocks
==1924479==    indirectly lost: 0 bytes in 0 blocks
==1924479==      possibly lost: 0 bytes in 0 blocks
==1924479==    still reachable: 25,922 bytes in 8 blocks
==1924479==         suppressed: 0 bytes in 0 blocks
==1924479== Reachable blocks (those to which a pointer was found) are not shown.
==1924479== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1924479== 
==1924479== For lists of detected and suppressed errors, rerun with: -s
==1924479== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
==1923642== 
==1923642== HEAP SUMMARY:
==1923642==     in use at exit: 0 bytes in 1 blocks
==1923642==   total heap usage: 25 allocs, 24 frees, 31,294 bytes allocated
==1923642== 
==1923642== LEAK SUMMARY:
==1923642==    definitely lost: 0 bytes in 0 blocks
==1923642==    indirectly lost: 0 bytes in 0 blocks
==1923642==      possibly lost: 0 bytes in 0 blocks
==1923642==    still reachable: 0 bytes in 1 blocks
==1923642==         suppressed: 0 bytes in 0 blocks
==1923642== Reachable blocks (those to which a pointer was found) are not shown.
==1923642== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1923642== 
==1923642== For lists of detected and suppressed errors, rerun with: -s
==1923642== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
